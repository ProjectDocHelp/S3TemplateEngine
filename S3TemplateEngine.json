{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "WebsiteName": {
            "Type": "String",
            "AllowedPattern": "[a-z0-9]*$",
            "ConstraintDescription": "WebsiteName must only contain lowercase letters and numbers",
            "Description": "Enter name of your project - it will be used for the naming of ressources such as S3 buckets and as Tag (e.g. for grouping costs in your invoice management). ONLY LOWERCASE CHARACTERS AND NUMBERS ALLOWED!"
        },
        "WebsiteUrl": {
            "Type": "String",
            "AllowedPattern": "[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
            "ConstraintDescription": "website is not a valid URL",
            "Description": "website base URl like 'example.com' - DO NOT ENTER 'www.example.com"
        },
        "Environment": {
            "Type": "String",
            "Default": "DEV",
            "AllowedValues": [
                "PROD",
                "STAGE",
                "DEV"
            ],
            "Description": "Choose environment type."
        },
        "WebCertificateARN": {
            "Type": "String",
            "Default": "",
            "Description": "Enter ARN of AWS Certificate Manager certificate for your Website."
        },
        "S3LambdaBucket": {
            "Type": "String",
            "Description": "Enter bucket name of the bucket that contains the lambda zip files (must be in the same region) as this CloudFormation template."
        }
    },
    "Conditions": {
        "isProduction": {
            "Fn::Equals": [
                {
                    "Ref": "Environment"
                },
                "PROD"
            ]
        }
    },
    "Mappings": {
        "Environment": {
            "PlatformName": {
                "DEV": "dev",
                "STAGE": "stage",
                "PROD": "prod"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "84b0184d-72d3-4733-862b-ac6bc50e9b2c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 900,
                    "y": 300
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "8d11fad2-1e91-43a3-a093-f40e30fe8aa3"
                ]
            },
            "3824a4ff-ff80-4b03-8777-75ef15393199": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 660,
                    "y": 300
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "59f1ecfe-afa6-4210-852e-ef5fa72dbe97"
                ]
            },
            "98cbee16-3627-46b2-a7a0-9bd8653caf03": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 780,
                    "y": 300
                },
                "z": 1,
                "embeds": []
            },
            "bd2cd923-d3dd-41d0-acd0-6c34ac7986a9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 900,
                    "y": 210
                },
                "z": 1,
                "embeds": []
            },
            "59f1ecfe-afa6-4210-852e-ef5fa72dbe97": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 720,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "98cbee16-3627-46b2-a7a0-9bd8653caf03"
                ]
            },
            "64858730-0f25-4fb7-99f7-8a344a70221c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 780,
                    "y": 390
                },
                "z": 1,
                "embeds": []
            },
            "63cd33de-16d0-4db7-83df-7e495a0d8660": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 570,
                    "y": 390
                },
                "z": 1,
                "embeds": []
            },
            "342725b1-146e-4f13-a8db-baf7f9e20efa": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1020,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "84b0184d-72d3-4733-862b-ac6bc50e9b2c"
                ]
            },
            "9a86314d-f302-4d4f-b618-94beb0824c17": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1020,
                    "y": 300
                },
                "z": 1,
                "embeds": []
            }
        }
    },
    "Outputs": {},
    "Resources": {
        "S3WEBSITECODE": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Environment",
                                    "PlatformName",
                                    {
                                        "Ref": "Environment"
                                    }
                                ]
                            },
                            "website-code",
                            {
                                "Ref": "WebsiteName"
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ],
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "files/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKMOVEFILE",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectRemoved:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "files/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKMOVEFILE",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "gfx/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKMOVEFILE",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectRemoved:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "gfx/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKMOVEFILE",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "js/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKMOVEFILE",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectRemoved:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "js/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKMOVEFILE",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "website/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKRENDERHTML",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectRemoved:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "website/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKRENDERHTML",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "part/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKRENDERHTML",
                                    "Arn"
                                ]
                            }
                        },
                        {
                            "Event": "s3:ObjectRemoved:*",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "part/"
                                        }
                                    ]
                                }
                            },
                            "Function": {
                                "Fn::GetAtt": [
                                    "LHOKRENDERHTML",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3824a4ff-ff80-4b03-8777-75ef15393199"
                }
            },
            "DependsOn": [
                "LPHOKMOVEFILES3",
                "LPHOKRENDERHTMLS3"
            ]
        },
        "S3WEBSITE": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Fn::FindInMap": [
                                    "Environment",
                                    "PlatformName",
                                    {
                                        "Ref": "Environment"
                                    }
                                ]
                            },
                            "website",
                            {
                                "Ref": "WebsiteName"
                            }
                        ]
                    ]
                },
                "WebsiteConfiguration": {
                    "ErrorDocument": "404.html",
                    "IndexDocument": "index.html"
                },
                "Tags": [
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "84b0184d-72d3-4733-862b-ac6bc50e9b2c"
                }
            }
        },
        "LHOKMOVEFILE": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Architectures": [
                    "arm64"
                ],
                "Code": {
                    "ZipFile": "'use strict';\nvar AWS = require('aws-sdk');\nconst sRegion = process.env.AWS_REGION;\nconst sDestBucket = process.env.destination_bucket;\nAWS.config.update({region: sRegion});\nconst s3 = new AWS.S3 (); \n\nexports.handler = async (event) => {\n            \n    console.log(JSON.stringify(event));\n                    \n    try{\n        for (let record of event.Records) {\n            \n            if( record.eventName.startsWith('ObjectRemoved') ){\n                let params = {\n                    Bucket: sDestBucket,\n                    Key: record.s3.object.key\n                };\n                await s3.deleteObject(params).promise();                \n            } else {\n                let params = {\n                    CopySource: record.s3.bucket.name + '/' + record.s3.object.key,\n                    Bucket: sDestBucket,\n                    Key: record.s3.object.key,\n                    ACL: 'public-read'\n                };\n                await s3.copyObject(params).promise();                \n            }\n\n        }\n    } catch(err){throw(err);}\n    \n    return 0;\n};"
                },
                "Handler": "index.handler",
                "Environment": {
                    "Variables": {
                        "destination_bucket": {
                            "Ref": "S3WEBSITE"
                        }
                    }
                },
                "FunctionName": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "Environment"
                            },
                            "HOK_move_file"
                        ]
                    ]
                },
                "Description": "Receives a S3 stream and moves files inside to target bucket.",
                "MemorySize": 2048,
                "Role": {
                    "Fn::GetAtt": [
                        "IAMRLAMBDAS3DDB",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs16.x",
                "Tags": [
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ],
                "Timeout": 240
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "98cbee16-3627-46b2-a7a0-9bd8653caf03"
                }
            }
        },
        "LHOKRENDERHTML": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Architectures": [
                    "arm64"
                ],
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3LambdaBucket"
                    },
                    "S3Key": "HOK_render_html_files.zip"
                },
                "Handler": "index.handler",
                "Environment": {
                    "Variables": {
                        "origin_bucket": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Fn::FindInMap": [
                                            "Environment",
                                            "PlatformName",
                                            {
                                                "Ref": "Environment"
                                            }
                                        ]
                                    },
                                    "website-code",
                                    {
                                        "Ref": "WebsiteName"
                                    }
                                ]
                            ]
                        },
                        "destination_bucket": {
                            "Ref": "S3WEBSITE"
                        },
                        "html_part_element_table": {
                            "Ref": "DDBWebsiteHtmlConnections"
                        },
                        "content_table": {
                            "Fn::Join": [
                                "_",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    "WebsiteContentFromWebiny"
                                ]
                            ]
                        }
                    }
                },
                "FunctionName": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "Environment"
                            },
                            "HOK_render_html_files"
                        ]
                    ]
                },
                "Description": "Receives a S3 stream and processes HTML templates inside. It then creates according static HTML data and puts it into the the target bucket.",
                "MemorySize": 3008,
                "Role": {
                    "Fn::GetAtt": [
                        "IAMRLAMBDAS3DDB",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs16.x",
                "Tags": [
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ],
                "Timeout": 360
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "64858730-0f25-4fb7-99f7-8a344a70221c"
                }
            }
        },
        "IAMRLAMBDAS3DDB": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "Environment"
                            },
                            "lambda_dynamoDB_S3"
                        ]
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSOpsWorksCloudWatchLogs",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "edgelambda.amazonaws.com",
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "bd2cd923-d3dd-41d0-acd0-6c34ac7986a9"
                }
            }
        },
        "LPHOKMOVEFILES3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "LHOKMOVEFILE",
                        "Arn"
                    ]
                },
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:s3:::*",
                            {
                                "Fn::FindInMap": [
                                    "Environment",
                                    "PlatformName",
                                    {
                                        "Ref": "Environment"
                                    }
                                ]
                            },
                            "-website-code-",
                            {
                                "Ref": "WebsiteName"
                            }
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "59f1ecfe-afa6-4210-852e-ef5fa72dbe97"
                }
            }
        },
        "LPHOKRENDERHTMLS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "LHOKRENDERHTML",
                        "Arn"
                    ]
                },
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:s3:::*",
                            {
                                "Fn::FindInMap": [
                                    "Environment",
                                    "PlatformName",
                                    {
                                        "Ref": "Environment"
                                    }
                                ]
                            },
                            "-website-code-",
                            {
                                "Ref": "WebsiteName"
                            }
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "59f1ecfe-afa6-4210-852e-ef5fa72dbe97"
                }
            }
        },
        "DDBWebsiteHtmlConnections": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "source",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "part",
                        "AttributeType": "S"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "KeySchema": [
                    {
                        "AttributeName": "source",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "part",
                        "KeyType": "RANGE"
                    }
                ],
                "TableClass": "STANDARD",
                "TableName": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "Environment"
                            },
                            "WebsiteHtmlPartConnections",
                            {
                                "Ref": "WebsiteName"
                            }
                        ]
                    ]
                },
                "Tags": [
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "63cd33de-16d0-4db7-83df-7e495a0d8660"
                }
            }
        },
        "CFWEBSITE": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Aliases": [
                        {
                            "Fn::If": [
                                "isProduction",
                                {
                                    "Ref": "WebsiteUrl"
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "Environment",
                                                    "PlatformName",
                                                    {
                                                        "Ref": "Environment"
                                                    }
                                                ]
                                            },
                                            ".",
                                            {
                                                "Ref": "WebsiteUrl"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::If": [
                                "isProduction",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                        "www.",
                                        {
                                            "Ref": "WebsiteUrl"
                                        }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "Environment",
                                                    "PlatformName",
                                                    {
                                                        "Ref": "Environment"
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                    "www.",
                                                    {
                                                        "Ref": "WebsiteUrl"
                                                    }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Comment": {
                        "Fn::Join": [
                            " ",
                            [
                                {
                                    "Ref": "WebsiteUrl"
                                },
                                {
                                    "Ref": "Environment"
                                },
                                "Website"
                            ]
                        ]
                    },
                    "CustomErrorResponses": [
                        {
                            "ErrorCachingMinTTL": 30,
                            "ErrorCode": 404,
                            "ResponseCode": 404,
                            "ResponsePagePath": "/404.html"
                        },
                        {
                            "ErrorCachingMinTTL": 30,
                            "ErrorCode": 403,
                            "ResponseCode": 404,
                            "ResponsePagePath": "/404.html"
                        }
                    ],
                    "DefaultCacheBehavior": {
                        "AllowedMethods": [
                            "GET",
                            "HEAD"
                        ],
                        "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "Compress": true,
                        "TargetOriginId": {
                            "Ref": "S3WEBSITE"
                        },
                        "ViewerProtocolPolicy": "redirect-to-https"
                    },
                    "DefaultRootObject": "index.html",
                    "Enabled": true,
                    "HttpVersion": "http2",
                    "IPV6Enabled": true,
                    "Origins": [
                        {
                            "DomainName": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "S3WEBSITE"
                                        },
                                        ".s3.",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ".amazonaws.com"
                                    ]
                                ]
                            },
                            "Id": {
                                "Ref": "S3WEBSITE"
                            },
                            "S3OriginConfig": {
                                "OriginAccessIdentity": {
                                    "Fn::Sub": "origin-access-identity/cloudfront/${CFCFOAI}"
                                }
                            }
                        }
                    ],
                    "PriceClass": "PriceClass_100",
                    "ViewerCertificate": {
                        "AcmCertificateArn": {
                            "Ref": "WebCertificateARN"
                        },
                        "MinimumProtocolVersion": "TLSv1",
                        "SslSupportMethod": "sni-only"
                    }
                },
                "Tags": [
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "app",
                        "Value": {
                            "Ref": "WebsiteName"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9a86314d-f302-4d4f-b618-94beb0824c17"
                }
            }
        },
        "CFCFOAI": {
            "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "Properties": {
                "CloudFrontOriginAccessIdentityConfig": {
                    "Comment": {
                        "Fn::Join": [
                            " ",
                            [
                                {
                                    "Ref": "WebsiteUrl"
                                },
                                {
                                    "Ref": "Environment"
                                },
                                "Website"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "342725b1-146e-4f13-a8db-baf7f9e20efa"
                }
            },
            "DependsOn": [
                "S3WEBSITE"
            ]
        }
    }
}